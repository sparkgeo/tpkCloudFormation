{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "TPK Jobs POST and GET with authorization",
  "Resources": {
    "TpkJobsApi": {
      "Properties": {
        "DefinitionBody": {
          "basePath": "/prod",
          "definitions": {
            "Empty": {
              "title": "Empty Schema",
              "type": "object"
            }
          },
          "host": "9il4ry9lkf.execute-api.us-east-1.amazonaws.com",
          "info": {
            "title": "TpkJobsApi",
            "version": "2017-10-27T22:41:43Z"
          },
          "paths": {
            "/jobs": {
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "when_no_match",
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Authorization'",
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      },
                      "statusCode": "200"
                    }
                  },
                  "type": "mock"
                }
              },
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "security": [
                  {
                    "tpk_cognito_authorizer": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "type": "aws_proxy",
                  "uri": { "Fn::Sub":  "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TpkJobsLambdaFunction.Arn}/invocations"  }
                }
              }
            }
          },
          "schemes": [
            "https"
          ],
          "securityDefinitions": {
            "tpk_cognito_authorizer": {
              "in": "header",
              "name": "Authorization",
              "type": "apiKey",
              "x-amazon-apigateway-authorizer": {
                "providerARNs": [
                  "arn:aws:cognito-idp:us-east-1:006481900477:userpool/us-east-1_tI5bk7EWM"
                ],
                "type": "cognito_user_pools"
              },
              "x-amazon-apigateway-authtype": "cognito_user_pools"
            }
          },
          "swagger": "2.0"
        },
        "StageName": "Prod",
        "Variables": {
        }
      },
      "Type": "AWS::Serverless::Api"
    },
    "TpkJobsLambdaFunction": {
      "Properties": {
        "CodeUri": "s3://tpk-cloudformation/tpkrequestslambda.zip",
        "Description": "Handle tpk job POST and GET requests",
        "FunctionName": "TpkJobsLambda",
        "Policies": [
          {
            "Statement": [
              {
                "Sid": "AllowBatchJobCreationPolicy",
                "Effect": "Allow",
                "Action": [
                  "batch:*"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          },
          "DynamoDBCrudPolicy": {
            "TableName": { "Ref": "Table" }
          }
        ],
        "Environment": {
          "Variables": {
            "JOB_QUEUE": { "Ref": "TpkBuilderJobQueue" },
            "JOB_DEFINITION": { "Ref": "TpkBuilderJobDefinition" },
            "TABLE_NAME": { "Ref": "Table" }
          }
        },
        "Events": {
          "Requests": {
            "Properties": {
              "Method": "ANY",
              "Path": "/jobs",
              "RestApiId": { "Ref": "TpkJobsApi" }
            },
            "Type": "Api"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs6.10"
      },
      "Type": "AWS::Serverless::Function"
    },
    "Table": {
      "Properties": {
        "PrimaryKey": {
          "Name": "id",
          "Type": "String"
        }
      },
      "Type": "AWS::Serverless::SimpleTable"
    },
    "Tpks3Bucket": {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "BucketName" : "tpkbucket"
      }
    },
    "Tpks3BucketPolicy": {
      "Type" : "AWS::S3::BucketPolicy",
      "Properties" : {
        "Bucket" : { "Ref" : "Tpks3Bucket" },
        "PolicyDocument": {
          "Statement": [
              {
                "Sid": "AllowGetPolicy",
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "Tpks3Bucket" } , "/*" ]]}
              }
          ]
        }
      }
    },
    "Tpks3LambdaFunction": {
      "Properties": {
        "CodeUri": "s3://tpk-cloudformation/tpks3lambda.zip",
        "Description": "Handle s3 tpk uploaded event in DynamoDB and SES",
        "FunctionName": "Tpks3Lambda",
        "Policies": [
          {
            "Statement": [
              {
                "Sid": "AllowSendEmailPolicy",
                "Effect": "Allow",
                "Action": [
                  "ses:SendEmail",
                  "ses:SendRawEmail"
                ],
                "Resource": [ "*" ]
              }
            ]
          },
          "DynamoDBCrudPolicy": {
            "TableName": { "Ref": "Table" }
          }
        ],
        "Environment": {
          "Variables": {
            "SOURCE_EMAIL": "sharkinsgis@gmail.com",
            "TABLE_NAME": { "Ref": "Table" }
          }
        },
        "Events": {
          "Upload": {
            "Properties": {
              "Bucket": { "Ref": "Tpks3Bucket" },
              "Events": "s3:ObjectCreated:*"
            },
            "Type": "S3"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs6.10"
      },
      "Type": "AWS::Serverless::Function"
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": "172.31.0.0/16",
        "MapPublicIpOnLaunch": "true"
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },
    "InternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" },
        "RouteTableId": { "Ref": "RouteTable" }
      }
    },
    "SubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "SubnetId": { "Ref": "Subnet" }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "Internet Group",
        "GroupDescription": "All traffic in, all traffic out.",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "TpkBuilderBatchServiceRole":{
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"],
        "Path": "/",
        "RoleName": "TpkBuilderBatchServiceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "batch.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
      }
    },
    "TpkBuilderEcsInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"],
        "Policies": [
          {
            "PolicyName": "s3PutObject",
            "PolicyDocument": {
              "Statement": [{
                     "Effect": "Allow",
                     "Action": "s3:PutObject*",
                     "Resource": { "Fn::Sub": "arn:aws:s3:::${Tpks3Bucket}*" }
              }]
            }
          }
        ],
        "Path": "/",
        "RoleName": "TpkBuilderEcsInstanceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
      }
    },
    "TpkBuilderComputeEnvironment": {
      "Type" : "AWS::Batch::ComputeEnvironment",
      "DependsOn": [ "TpkBuilderBatchServiceRole", "TpkBuilderEcsInstanceRole" ],
      "Properties" : {
        "Type" : "Managed",
        "ServiceRole" : { "Fn::GetAtt": ["TpkBuilderBatchServiceRole",  "Arn" ] },
        "ComputeEnvironmentName": "TpkBuilderComputeEnvironment",
        "ComputeResources" : {
          "SecurityGroupIds": [ { "Ref": "SecurityGroup" }],
          "Subnets": [ { "Ref": "Subnet" } ],
          "Type": "EC2",
          "MaxvCpus": 2,
          "MinvCpus": 0,
          "InstanceRole": { "Fn::GetAtt": ["TpkBuilderEcsInstanceRole",  "Arn" ] },
          "InstanceTypes": [ "m3.medium" ]
        },
        "State" : "ENABLED"
      }
    },
    "TpkBuilderJobQueue": {
      "Type" : "AWS::Batch::JobQueue",
      "Properties": {
        "ComputeEnvironmentOrder": [ {
          "Order": 1,
          "ComputeEnvironment": { "Ref": "TpkBuilderComputeEnvironment" }
        } ],
        "State": "ENABLED",
        "Priority": 1,
        "JobQueueName": "TpkBuilderJobQueue"
      }
    },
    "TpkBuilderJobDefinition": {
      "Type": "AWS::Batch::JobDefinition",
      "Properties": {
        "JobDefinitionName": "TpkBuilderJobDefinition",
        "RetryStrategy": {
          "Attempts": 1
        },
        "Parameters": {},
        "Type": "container",
        "ContainerProperties": {
          "Image": "006481900477.dkr.ecr.us-east-1.amazonaws.com/tpk-builder-image",
          "Vcpus": 2,
          "Memory": 2000,
          "Command": [
              "node",
              "index.js",
              "--id",
              "Ref::id",
              "--west",
              "Ref::west",
              "--south",
              "Ref::south",
              "--east",
              "Ref::east",
              "--north",
              "Ref::north",
              "--sod",
              "Ref::sod",
              "--service",
              "Ref::service",
              "--token",
              "Ref::token",
              "--minzoom",
              "Ref::minzoom",
              "--maxzoom",
              "Ref::maxzoom"
          ],
          "Volumes": [],
          "Environment": [
              {
                  "Name": "AWS_S3_REGION",
                  "Value": { "Fn::Sub": "${AWS::Region}" }
              },
              {
                  "Name": "AWS_S3_BUCKET",
                  "Value": { "Ref": "Tpks3Bucket" }
              },
              {
                  "Name": "MAPBOXURL",
                  "Value": "http://api.tiles.mapbox.com/v4"
              },
              {
                  "Name": "SODURL",
                  "Value": "https://gisservices.datadoors.net/i3_ArcGIS/tile"
              }
          ],
          "MountPoints": [],
          "Ulimits": []
        }
      }
    }
  },
  "Transform": "AWS::Serverless-2016-10-31"
}
